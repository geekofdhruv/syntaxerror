# Generated by Django 5.1.2 on 2024-10-19 14:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('age', models.IntegerField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('trip_id', models.AutoField(primary_key=True, serialize=False)),
                ('place_to_travel', models.CharField(max_length=255)),
                ('expected_date_of_travel', models.DateField()),
                ('group_or_solo', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SuccessfulTrip',
            fields=[
                ('successful_trip_id', models.AutoField(primary_key=True, serialize=False)),
                ('match_date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tripmates.trip')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Declined', 'Declined')], default='Pending', max_length=20)),
                ('requestee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_received', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_sent', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tripmates.trip')),
            ],
        ),
        migrations.CreateModel(
            name='UserPersona',
            fields=[
                ('persona_id', models.AutoField(primary_key=True, serialize=False)),
                ('travel_frequency', models.CharField(choices=[('once_a_year', 'Once a year'), ('2-3_times_a_year', '2-3 times a year'), ('once_a_month', 'Once a month'), ('more_frequently', 'More frequently')], default='once_a_year', max_length=50)),
                ('trip_preferences', models.CharField(choices=[('adventure', 'Adventure'), ('relaxation', 'Relaxation'), ('cultural_exploration', 'Cultural exploration'), ('partying_nightlife', 'Partying/Nightlife'), ('business', 'Business')], default='adventure', max_length=50)),
                ('trip_type', models.CharField(choices=[('planned', 'Planned'), ('spontaneous', 'Spontaneous'), ('mix_of_both', 'A mix of both')], default='planned', max_length=50)),
                ('destination_preference', models.CharField(choices=[('beaches', 'Beaches'), ('mountains', 'Mountains'), ('urban_cities', 'Urban Cities'), ('historical_sites', 'Historical Sites'), ('national_parks', 'National Parks')], default='beaches', max_length=50)),
                ('accommodation_preference', models.CharField(choices=[('hotels', 'Hotels'), ('hostels', 'Hostels'), ('ashrams_dharamshaala', 'Ashrams/ Dharamshaala'), ('camping', 'Camping')], default='hotels', max_length=50)),
                ('transport_preference', models.CharField(choices=[('public_transportation', 'Public transportation (buses, trains, etc.)'), ('renting_a_car', 'Renting a car'), ('walking_biking', 'Walking/Biking'), ('private_transport', 'Private transport (taxis, Ubers, etc.)')], default='public_transportation', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
